// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeterinarySlices.API.Data;

#nullable disable

namespace VeterinarySlices.API.Migrations
{
    [DbContext(typeof(VeterinaryDataContext))]
    [Migration("20241022190245_AccountsAdded")]
    partial class AccountsAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VeterinarySlices.API.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created")
                        .HasColumnOrder(5);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email")
                        .HasColumnOrder(2);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("full_name")
                        .HasColumnOrder(4);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("VeterinarySlices.API.Entities.AccountAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id")
                        .HasColumnOrder(2);

                    b.Property<int>("AuditId")
                        .HasColumnType("int")
                        .HasColumnName("audit_id")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AuditId");

                    b.ToTable("accounts_audits");
                });

            modelBuilder.Entity("VeterinarySlices.API.Entities.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateLogged")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_logged")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("audits");
                });

            modelBuilder.Entity("VeterinarySlices.API.Entities.AccountAudit", b =>
                {
                    b.HasOne("VeterinarySlices.API.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinarySlices.API.Entities.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Audit");
                });
#pragma warning restore 612, 618
        }
    }
}
